#
# This file contains strings that appear in generated usage messages.
#

#
# Prospero Shell Script Name
#
# This item is here to make it available to the Java runtime via a resource bundle.
prospero.dist.name=${prospero.dist.name}

#
# Main Command Welcome Message
#
# This is only printed when running prospero without any parameters.

prospero.welcomeMessage = @|bold Welcome to ${prospero.dist.name} CLI!|@\n\
  \n\
  This tool allows you to provision instances of the ${prospero.target.server} application container.\n

#
# General Usage Sections Headings
#

usage.synopsisHeading = %nUsage:\u0020
# for the main command do not prepend with new line character:
prospero.usage.synopsisHeading = Usage:\u0020
usage.commandListHeading = %nCommands:%n
usage.optionListHeading = %nOptions:%n

#
# Command Descriptions
#
prospero.usage.customSynopsis=             @|bold ${prospero.dist.name}|@ [@|fg(yellow) -hv|@] [COMMAND]

prospero.install.usage.header = Install a new application server instance.
prospero.install.usage.customSynopsis.0 =             @|bold ${prospero.dist.name} install|@ @|fg(yellow) --fpl|@=@|italic <predefined-name>|@ [@|fg(yellow) OPTION|@]...
prospero.install.usage.customSynopsis.1 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --fpl|@=@|italic <predefined-name>|@ @|fg(yellow) --manifest|@=@|italic <URL/GAV/path>|@ @|fg(yellow) --repositories|@=@|italic <URL>[,...]|@ [@|fg(yellow) OPTION|@]...
prospero.install.usage.customSynopsis.2 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --fpl|@=@|italic <URL/GA>|@ @|fg(yellow) --provision-config|@=@|italic <path>|@ [@|fg(yellow) OPTION|@]...
prospero.install.usage.customSynopsis.3 = \u0020        (to install a feature pack)
prospero.install.usage.customSynopsis.4 = \u0020 or:  @|bold ${prospero.dist.name} install|@ @|fg(yellow) --definition|@=@|italic <path>|@ [@|fg(yellow) OPTION|@]...
prospero.install.usage.customSynopsis.5 = \u0020        (to install from a galleon provisioning.xml file)

prospero.update.usage.header  = Updates a server instance with the latest patches.

prospero.update.perform.usage.header  = Apply the latest available patches on a server instance.
prospero.update.perform.usage.customSynopsis.0 = @|bold ${prospero.dist.name} update perform|@ [@|fg(yellow) --dir|@=@|italic <path>|@] @|fg(yellow) [OPTION]|@...
prospero.update.perform.usage.customSynopsis.1 = \u0020        (to update a server installation)
prospero.update.perform.usage.customSynopsis.2 = \u0020 or:  @|bold ${prospero.dist.name} update perform|@ @|fg(yellow) --self|@ [@|fg(yellow) --dir|@=@|italic <path>|@] [@|fg(yellow) OPTION|@]...
prospero.update.perform.usage.customSynopsis.3 = \u0020        (to update ${prospero.dist.name})

prospero.update.prepare.usage.header  = Provision a server candidate with the latest available patches.
prospero.update.prepare.usage.customSynopsis.0 = \u0020 @|bold ${prospero.dist.name} update prepare|@ [@|fg(yellow) --dir|@=@|italic <path>|@] @|fg(yellow) --update-dir|@=@|italic <path>|@ @|fg(yellow) [OPTION]|@...

prospero.update.apply.usage.header  = Apply changes from a server candidate onto the server instance.

prospero.history.usage.header = List previous installation states.

prospero.revert.usage.header  = Reverts to a previous installation state.
prospero.revert.prepare.usage.header = Creates a server with reverted configuration in chosen location.
prospero.revert.apply.usage.header = Merges a server prepared with @|bold ${prospero.dist.name} revert prepare|@ into current server installation.
prospero.revert.perform.usage.header = Performs complete revert operation running both @|bold prepare|@ and @|bold apply|@ steps.

prospero.channel.usage.header = Manage channels the installation is subscribed to.
prospero.channel.add.usage.header    = Subscribes the installation to a new channel.
prospero.channel.list.usage.header   = List channels subscribed to by the installation.
prospero.channel.remove.usage.header = Unsubscribe the installation from a channel.
prospero.channel.initialize.usage.header = Add a custom channel to be used by the server
prospero.channel.promote.usage.header = Promote a bundle of artifacts to a custom repository

prospero.clone.usage.header = Manage the installation metadata.
prospero.clone.export.usage.header = Export the installation metadata.
prospero.clone.restore.usage.header = Restore the installation metadata.

prospero.completion.usage.header = Generate bash completion script. (Apply with `source <(${prospero.dist.name} completion)`)
prospero.completion.usage.description.0 = Generate bash/zsh completion script for ${ROOT-COMMAND-NAME:-the root command of this command}.
prospero.completion.usage.description.1 = Run the following command to give `${ROOT-COMMAND-NAME:-$PARENTCOMMAND}` TAB completion in the current shell:
prospero.completion.usage.description.2 =
prospero.completion.usage.description.3 = \u0020  source <(${PARENT-COMMAND-FULL-NAME:-$PARENTCOMMAND} ${COMMAND-NAME})
prospero.completion.usage.description.4 =
prospero.completion.usage.description.5 = Alternatively, you can save the completion script to a file, and evaluate this file
prospero.completion.usage.description.6 = from your .bashrc script:
prospero.completion.usage.description.7 =
prospero.completion.usage.description.8 = \u0020  ${PARENT-COMMAND-FULL-NAME:-$PARENTCOMMAND} ${COMMAND-NAME} > ~/${prospero.dist.name}_completion
prospero.completion.usage.description.9 = \u0020  echo \". ~/${prospero.dist.name}_completion\" >> ~/.bashrc
prospero.completion.usage.description.10 =

prospero.apply-update.usage.header = Apply previously prepared update to the server. The server has to be stopped during this operation.

#
# Parameter Groups Headings
#
# By defining these, the parameter groups will be printed in separate sections introduced by these headings.

localRepoOptions.heading = %nMaven cache:%n

#
# Option Descriptions
#

archive = Path to the promoted artifact bundle.
manifest = Location of a Channel Manifest. This can be URL, Maven GAV or path. Alternative to --provision-config.
prospero.channel.promote.manifest = Location of the custom Channel Manifest in GAV form.
repositories.0 = Remote Maven repositories that contains the artifacts required to install the application \
  server (multiple repositories are separated by comma). These repositories will override any other configured repositories in all channels \
  for this operation only. Valid values are either URLs or ID::URL pairs.
repositories.1 = These repositories will not be persisted in the server configuration.
prospero.install.repositories.0 = ${repositories.0}
prospero.install.repositories.1 =  Alternative to --provision-config.
channel-name = Name of the new channel. Channel names have to be unique within the installation.
prospero.channel.remove.channel-name = Name of the channel to unsubscribe the installation from.
customization-repository = URL to repository containing custom artifacts.
definition = Galleon provisioning XML definition file path.

# General description for the --dir option, applies to all commands unless a command specifies different description:
dir = Installation directory. If not specified, current working directory is used.
# Description of the --dir option specific to the install command:
prospero.install.dir = Target directory where the application server is going to be provisioned.

dry-run = Print components that can be upgraded, but do not perform the upgrades.
fpl = Feature pack location. This can be a feature pack "GA" like "org.jboss.eap:wildfly-ee-galleon-pack", or one of \
  pre-defined feature pack names: \ [${COMPLETION-CANDIDATES}].
help = Display this help message.
local-cache = Path to the local Maven repository cache. It overrides the default Maven repository at ~/.m2/repository.
no-resolve-local-cache = Perform the operation without resolving or installing artifacts from/into local maven cache.
offline = Perform installation from local or file-system Maven repositories only.
provision-config = Provisioning configuration file path. This is special JSON configuration file that contains list \
  of channel file references and list of remote Maven repositories. Alternative to --manifest and --repositories.
revision = Hash of an installation state.
repoId = Repository ID
repoUrl = Repository URL
target-repository-url = Target repository to promote artifacts to.
self = Update ${prospero.dist.name} installation itself, rather than server installation.
version = Print ${prospero.dist.name} version and exit.
yes = Perform the operation without asking for a confirmation.
path = Path of the file to export to or import from.
update-dir = Path of previously prepared server update to be applied.
prospero.update.update-dir = Path to generate the updated server into. The original server will not be changed.

#
# Exit Codes
#
# This only appears in the main command usage.

prospero.usage.exitCodeListHeading = %nExit codes:%n
prospero.usage.exitCodeList.0 = 0:Successful program execution.
prospero.usage.exitCodeList.1 = 1:Failed operation.
prospero.usage.exitCodeList.2 = 2:Invalid arguments were given.

#
# Footer
#
# This only appears in the main command usage.

prospero.usage.footer = %nUse `${prospero.dist.name} <COMMAND> --help` to show usage information about given command.
